name: PR Validation

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  lint-js:
    name: JavaScript Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "control-plane/package-lock.json"

      - name: Install JavaScript dependencies
        working-directory: control-plane
        run: npm ci

      - name: Run JavaScript linting
        working-directory: control-plane
        run: npm run lint

  test:
    name: Build and Test Swift Packages
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: strato_test
          POSTGRES_USER: strato
          POSTGRES_PASSWORD: strato_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev zlib1g-dev zstd

      - name: Cache Swift packages
        uses: actions/cache@v4
        with:
          path: |
            control-plane/.build
            shared/.build
          key: ${{ runner.os }}-swift-${{ hashFiles('control-plane/Package.resolved', 'shared/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-swift-

      - name: Build Shared Package
        working-directory: shared
        run: swift build --build-tests

      - name: Build Control Plane
        working-directory: control-plane
        run: swift build --build-tests

      - name: Test Control Plane
        working-directory: control-plane
        run: swift test --skip-build --parallel

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
