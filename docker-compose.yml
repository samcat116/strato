# Docker Compose file for Strato Control Plane + Agent Architecture
#
# Install Docker on your system to run and test
# your Strato platform in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker compose build
# Start control plane: docker compose up control-plane
#    Start agent: docker compose up agent
# Run migrations: docker compose run migrate
#       Stop all: docker compose down (add -v to wipe db)
#

volumes:
  db_data:
  cloud_hypervisor_socket:
  vm_images:

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  DATABASE_HOST: db
  DATABASE_NAME: vapor_database
  DATABASE_USERNAME: vapor_username
  DATABASE_PASSWORD: vapor_password
  PERMIFY_ENDPOINT: http://permify:3476
  # WebAuthn Configuration - Override these for remote deployment
  WEBAUTHN_RELYING_PARTY_ID: ${WEBAUTHN_RELYING_PARTY_ID:-localhost}
  WEBAUTHN_RELYING_PARTY_NAME: ${WEBAUTHN_RELYING_PARTY_NAME:-Strato}
  WEBAUTHN_RELYING_PARTY_ORIGIN: ${WEBAUTHN_RELYING_PARTY_ORIGIN:-http://localhost:8080}

services:
  control-plane:
    image: strato-control-plane:latest
    build:
      context: .
      dockerfile: control-plane/Dockerfile
    environment:
      <<: *shared_environment
    depends_on:
      - db
      - permify
    ports:
      - "8080:8080"
    networks:
      - strato-network
    command:
      [
        "serve",
        "--env",
        "production",
        "--hostname",
        "0.0.0.0",
        "--port",
        "8080",
      ]

  # agent:
  #     image: strato-agent:latest
  #     build:
  #         context: .
  #         dockerfile: agent/Dockerfile
  #     environment:
  #         LOG_LEVEL: ${LOG_LEVEL:-debug}
  #     depends_on:
  #         - control-plane
  #     volumes:
  #         - cloud_hypervisor_socket:/var/run/cloud-hypervisor
  #         - vm_images:/images
  #     networks:
  #         - strato-network
  #     privileged: true
  #     command:
  #         [
  #             "--control-plane-url",
  #             "ws://control-plane:8080/agent/ws",
  #             "--hypervisor-socket",
  #             "/var/run/cloud-hypervisor/cloud-hypervisor.sock",
  #             "--log-level",
  #             "debug"
  #         ]

  migrate:
    image: strato-control-plane:latest
    build:
      context: .
      dockerfile: control-plane/Dockerfile
    environment:
      <<: *shared_environment
    depends_on:
      - db
    networks:
      - strato-network
    command: ["migrate", "--yes"]
    deploy:
      replicas: 0

  revert:
    image: strato-control-plane:latest
    build:
      context: .
      dockerfile: control-plane/Dockerfile
    environment:
      <<: *shared_environment
    depends_on:
      - db
    networks:
      - strato-network
    command: ["migrate", "--revert", "--yes"]
    deploy:
      replicas: 0

  db:
    image: postgres:16-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_USER: vapor_username
      POSTGRES_PASSWORD: vapor_password
      POSTGRES_DB: vapor_database
      PGDATA: /var/lib/postgresql/data/strato
    ports:
      - "5432:5432"
    networks:
      - strato-network

  permify:
    image: ghcr.io/permify/permify:latest
    ports:
      - "3476:3476"
      - "3478:3478"
    command: ["serve", "--config=/config/config.yaml"]
    volumes:
      - ./permify:/config
    depends_on:
      - db
    environment:
      - PERMIFY_DATABASE_URI=postgres://vapor_username:vapor_password@db:5432/vapor_database?sslmode=disable
    networks:
      - strato-network

networks:
  strato-network:
    driver: bridge
