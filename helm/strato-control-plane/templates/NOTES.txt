1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "strato-control-plane.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "strato-control-plane.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "strato-control-plane.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "strato-control-plane.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Database Connection:
{{- if .Values.postgresql.enabled }}
   - PostgreSQL is deployed as part of this release
   - Database: {{ .Values.strato.database.name }}
   - Username: {{ .Values.strato.database.username }}
{{- else }}
   - Using external PostgreSQL database
   - Host: {{ .Values.externalDatabase.host }}
   - Database: {{ .Values.externalDatabase.database }}
{{- end }}

3. SpiceDB Authorization:
{{- if .Values.spicedb.enabled }}
   - SpiceDB is deployed as part of this release
   - HTTP endpoint: http://{{ include "strato-control-plane.fullname" . }}-spicedb:{{ .Values.spicedb.service.httpPort }}
   - gRPC endpoint: {{ include "strato-control-plane.fullname" . }}-spicedb:{{ .Values.spicedb.service.grpcPort }}
{{- else }}
   - SpiceDB is disabled. Authorization features will not be available.
{{- end }}

4. WebAuthn Configuration:
   - Relying Party ID: {{ .Values.strato.webauthn.relyingPartyId }}
   - Relying Party Name: {{ .Values.strato.webauthn.relyingPartyName }}
   - Origin: {{ include "strato-control-plane.webauthnOrigin" . }}

{{- if .Values.migration.enabled }}
5. Database migrations have been automatically applied.
{{- else }}
5. Database migrations are disabled. You may need to run them manually.
{{- end }}

6. To connect Strato Agents to this control plane:
   - WebSocket URL: ws://{{ include "strato-control-plane.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port }}/agent/ws
   {{- if .Values.strato.externalHostname }}
   - External WebSocket URL: ws://{{ .Values.strato.externalHostname }}:{{ .Values.service.port }}/agent/ws
   {{- end }}

7. Health Checks:
   - Control Plane Health: kubectl get pods -l app.kubernetes.io/name={{ include "strato-control-plane.name" . }}
{{- if .Values.spicedb.enabled }}
   - SpiceDB Health: kubectl get pods -l app.kubernetes.io/component=spicedb
{{- end }}
{{- if .Values.postgresql.enabled }}
   - PostgreSQL Health: kubectl get pods -l app.kubernetes.io/name=postgresql
{{- end }}

8. Troubleshooting:
   - View logs: kubectl logs -l app.kubernetes.io/name={{ include "strato-control-plane.name" . }}
{{- if .Values.spicedb.enabled }}
   - SpiceDB logs: kubectl logs -l app.kubernetes.io/component=spicedb
{{- end }}
   - Describe pod: kubectl describe pod -l app.kubernetes.io/name={{ include "strato-control-plane.name" . }}
   - Check events: kubectl get events --sort-by=.metadata.creationTimestamp

9. Configuration:
   - Log Level: {{ .Values.strato.logLevel }}
   - WebAuthn Relying Party: {{ .Values.strato.webauthn.relyingPartyId }}
   - Resources:
     * Control Plane CPU: {{ .Values.resources.requests.cpu }}/{{ .Values.resources.limits.cpu }}
     * Control Plane Memory: {{ .Values.resources.requests.memory }}/{{ .Values.resources.limits.memory }}
{{- if .Values.spicedb.enabled }}
     * SpiceDB CPU: {{ .Values.spicedb.resources.requests.cpu }}/{{ .Values.spicedb.resources.limits.cpu }}
     * SpiceDB Memory: {{ .Values.spicedb.resources.requests.memory }}/{{ .Values.spicedb.resources.limits.memory }}
{{- end }}

For more information about Strato, visit: https://github.com/samcat116/strato

⚠️  SECURITY NOTICE: 
   - Change default passwords in production
   - Update SpiceDB preshared key: {{ .Values.spicedb.presharedKey }}
   - Configure proper ingress/TLS for external access